name: Continuous Docker Image Build

on:
  push:
    branches:
      - '**'

  pull_request:

jobs:

  build-docker-images:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Fill GitHub Environment Variables
        uses: FranzDiebold/github-env-vars-action@v2.3.1

      - name: Setup BATS testing framework
        uses: mig4/setup-bats@v1.2.0
        with:
          bats-version: 1.2.1

      - name: Fill PHP Version Environment Variable
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .build.env

      - name: Prepare Workflow Environment
        id: prep
        run: |
          docker network create docker_default
          docker pull appropriate/curl:latest
          DOCKERHUB_PRD_IMAGENAME=docker.io/elasticms/website-skeleton
          DOCKERHUB_DEV_IMAGENAME=docker.io/elasticms/website-skeleton-dev
          GHCR_PRD_IMAGENAME=ghcr.io/${{ github.repository_owner }}/website-skeleton
          GHCR_DEV_IMAGENAME=ghcr.io/${{ github.repository_owner }}/website-skeleton-dev
          VERSION_MAJOR_MINOR_PATCH=${{ env.ELASTICMS_WEBSITE_SKELETON_VERSION }}
          VERSION_MAJOR_MINOR=${VERSION_MAJOR_MINOR_PATCH%.*}
          VERSION_MAJOR=${VERSION_MAJOR_MINOR%.*}
          echo ::set-output name=dockerhub_image_prd::${DOCKERHUB_PRD_IMAGENAME}
          echo ::set-output name=dockerhub_image_dev::${DOCKERHUB_DEV_IMAGENAME}
          echo ::set-output name=ghcr_image_prd::${GHCR_PRD_IMAGENAME}
          echo ::set-output name=ghcr_image_dev::${GHCR_DEV_IMAGENAME}
          echo ::set-output name=version_major_minor_patch::${VERSION_MAJOR_MINOR_PATCH}
          echo ::set-output name=version_major_minor::${VERSION_MAJOR_MINOR}
          echo ::set-output name=version_major::${VERSION_MAJOR}
          echo ::set-output name=build_date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Fill GHCR Docker ElasticMS WebSite Skeleton Prod Image metadata
        id: meta_ghcr_prd
        uses: crazy-max/ghaction-docker-meta@v3.6.2
        with:
          images: "${{ steps.prep.outputs.ghcr_image_prd }}"
          tags: |            
            type=raw,value=${{ env.CI_SHA_SHORT }}
            type=raw,value=${{ steps.prep.outputs.version_major_minor_patch }}
            type=raw,value=${{ steps.prep.outputs.version_major_minor }}
            type=raw,value=${{ steps.prep.outputs.version_major }}
            type=raw,value=latest

      - name: Fill GHCR Docker ElasticMS WebSite Skeleton Dev Image metadata
        id: meta_ghcr_dev
        uses: crazy-max/ghaction-docker-meta@v3.6.2
        with:
          images: "${{ steps.prep.outputs.ghcr_image_dev }}"
          tags: |            
            type=raw,value=${{ env.CI_SHA_SHORT }}
            type=raw,value=${{ steps.prep.outputs.version_major_minor_patch }}
            type=raw,value=${{ steps.prep.outputs.version_major_minor }}
            type=raw,value=${{ steps.prep.outputs.version_major }}
            type=raw,value=latest

      - name: Fill DockerHub Docker ElasticMS WebSite Skeleton Prod Image metadata
        id: meta_dockerhub_prd
        uses: crazy-max/ghaction-docker-meta@v3.6.2
        with:
          images: "${{ steps.prep.outputs.dockerhub_image_prd }}"
          tags: |            
            type=raw,value=${{ steps.prep.outputs.version_major_minor_patch }}
            type=raw,value=${{ steps.prep.outputs.version_major_minor }}
            type=raw,value=${{ steps.prep.outputs.version_major }}
            type=raw,value=latest

      - name: Fill DockerHub Docker ElasticMS WebSite Skeleton Dev Image metadata
        id: meta_dockerhub_dev
        uses: crazy-max/ghaction-docker-meta@v3.6.2
        with:
          images: "${{ steps.prep.outputs.dockerhub_image_dev }}"
          tags: |            
            type=raw,value=${{ steps.prep.outputs.version_major_minor_patch }}
            type=raw,value=${{ steps.prep.outputs.version_major_minor }}
            type=raw,value=${{ steps.prep.outputs.version_major }}
            type=raw,value=latest

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1.12.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Cache Docker layers
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build GHCR ElasticMS WebSite Skeleton Prod Docker Image
        id: build_ghcr_image_prd
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: emsch-prod
          build-args: |
            VERSION_ARG=${{ env.ELASTICMS_WEBSITE_SKELETON_VERSION }}
            RELEASE_ARG=${{ env.CI_RUN_ID }}
            VCS_REF_ARG=${{ env.CI_SHA }}
            BUILD_DATE_ARG=${{ steps.prep.outputs.build_date }}
          push: false
          load: true
          tags: ${{ steps.meta_ghcr_prd.outputs.tags }}
          labels: ${{ steps.meta_ghcr_prd.outputs.labels }}

      - name: Build GHCR ElasticMS WebSite Skeleton Dev Docker Image
        id: build_ghcr_image_dev
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: emsch-dev
          build-args: |
            VERSION_ARG=${{ env.ELASTICMS_WEBSITE_SKELETON_VERSION }}
            RELEASE_ARG=${{ env.CI_RUN_ID }}
            VCS_REF_ARG=${{ env.CI_SHA }}
            BUILD_DATE_ARG=${{ steps.prep.outputs.build_date }}
          push: false
          load: true
          tags: ${{ steps.meta_ghcr_dev.outputs.tags }}
          labels: ${{ steps.meta_ghcr_dev.outputs.labels }}

      - name: Scan GHCR ElasticMS WebSite Skeleton Prod Docker Image
        uses: azure/container-scan@v0
        with:
          image-name: ${{ steps.prep.outputs.ghcr_image_prd }}:${{ env.CI_SHA_SHORT }}
          severity-threshold: CRITICAL

      - name: Test ElasticMS WebSite Skeleton Docker Image
        env: 
          ELASTICMS_WEBSITE_SKELETON_DOCKER_IMAGE_NAME: ${{ steps.prep.outputs.ghcr_image_prd }}:${{ env.CI_SHA_SHORT }}
        run: |
          bats -r test/tests.fs.storage.bats
          bats -r test/tests.s3.storage.bats

      - name: Push GHCR ElasticMS WebSite Skeleton Prod Docker Image
        id: push_ghcr_prd
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: emsch-prod
          build-args: |
            VERSION_ARG=${{ env.ELASTICMS_WEBSITE_SKELETON_VERSION }}
            RELEASE_ARG=${{ env.CI_RUN_ID }}
            VCS_REF_ARG=${{ env.CI_SHA }}
            BUILD_DATE_ARG=${{ steps.prep.outputs.build_date }}
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta_ghcr_prd.outputs.tags }}
          labels: ${{ steps.meta_ghcr_prd.outputs.labels }}

      - name: Push GHCR ElasticMS WebSite Skeleton Dev Docker Image
        id: push_ghcr_dev
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: emsch-dev
          build-args: |
            VERSION_ARG=${{ env.ELASTICMS_WEBSITE_SKELETON_VERSION }}
            RELEASE_ARG=${{ env.CI_RUN_ID }}
            VCS_REF_ARG=${{ env.CI_SHA }}
            BUILD_DATE_ARG=${{ steps.prep.outputs.build_date }}
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta_ghcr_dev.outputs.tags }}
          labels: ${{ steps.meta_ghcr_dev.outputs.labels }}

      - name: Push DockerHub ElasticMS WebSite Skeleton Prod Docker Image
        id: push_dockerhub_prd
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: emsch-prod
          build-args: |
            VERSION_ARG=${{ env.ELASTICMS_WEBSITE_SKELETON_VERSION }}
            RELEASE_ARG=${{ env.CI_RUN_ID }}
            VCS_REF_ARG=${{ env.CI_SHA }}
            BUILD_DATE_ARG=${{ steps.prep.outputs.build_date }}
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta_dockerhub_prd.outputs.tags }}
          labels: ${{ steps.meta_dockerhub_prd.outputs.labels }}

      - name: Push DockerHub ElasticMS WebSite Skeleton Dev Docker Image
        id: push_dockerhub_dev
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: emsch-dev
          build-args: |
            VERSION_ARG=${{ env.ELASTICMS_WEBSITE_SKELETON_VERSION }}
            RELEASE_ARG=${{ env.CI_RUN_ID }}
            VCS_REF_ARG=${{ env.CI_SHA }}
            BUILD_DATE_ARG=${{ steps.prep.outputs.build_date }}
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta_dockerhub_dev.outputs.tags }}
          labels: ${{ steps.meta_dockerhub_dev.outputs.labels }}

      - name: Check GHCR ElasticMS WebSite Skeleton Prod Docker Image
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          docker buildx imagetools inspect ${{ steps.prep.outputs.ghcr_image_prd }}:${{ steps.prep.outputs.version_major_minor_patch }}

      - name: Check GHCR ElasticMS WebSite Skeleton Dev Docker Image
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          docker buildx imagetools inspect ${{ steps.prep.outputs.ghcr_image_dev }}:${{ steps.prep.outputs.version_major_minor_patch }}

      - name: Check DockerHub ElasticMS WebSite Skeleton Prod Docker Image
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          docker buildx imagetools inspect ${{ steps.prep.outputs.dockerhub_image_prd }}:${{ steps.prep.outputs.version_major_minor_patch }}

      - name: Check DockerHub ElasticMS WebSite Skeleton Dev Docker Image
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          docker buildx imagetools inspect ${{ steps.prep.outputs.dockerhub_image_dev }}:${{ steps.prep.outputs.version_major_minor_patch }}

      - name: Check GHCR ElasticMS WebSite Skeleton Prod Docker Images pull's
        if: github.GHCR != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          docker pull ${{ steps.prep.outputs.ghcr_image_prd }}:${{ steps.prep.outputs.version_major_minor_patch }}

      - name: Check GHCR ElasticMS WebSite Skeleton Dev Docker Images pull's
        if: github.GHCR != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          docker pull ${{ steps.prep.outputs.ghcr_image_dev }}:${{ steps.prep.outputs.version_major_minor_patch }}

      - name: Check DockerHub ElasticMS WebSite Skeleton Prod Docker Images pull's
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          docker pull ${{ steps.prep.outputs.dockerhub_image_prd }}:${{ steps.prep.outputs.version_major_minor_patch }}

      - name: Check DockerHub ElasticMS WebSite Skeleton Dev Docker Images pull's
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          docker pull ${{ steps.prep.outputs.dockerhub_image_dev }}:${{ steps.prep.outputs.version_major_minor_patch }}
